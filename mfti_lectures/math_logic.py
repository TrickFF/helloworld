# обмен переменных значениями
a = 2
b = 5
a, b = b, a
print(a, b)

# деление отрицательных чисел
a = (-11) // 10  # берется ближайшее отрицательное число кратное 10, т.е. -20
print(a)
a = (-11) % 10  # остаток от деления всегда положительный (разница между -20 и -11)
print(a)

# 1. не А (отрицание)
# 2. А и B - A*B (логическое умножение)
# 3. А или B - A+B (логическое сложение)
# 4. Импликация в алгебре логики
#    a -> b или a => b  т.е. из a следует b
#    2+2=4 => 4+4=8
#    Особенности: Ложь + Ложь = Истина, Ложь + Истина = Истина
# 5. Эквиваленция
#    A<=>B A=B
#    Особенности:  Ложь + Ложь = Истина
# 6. Исключающее "или" (XOR), также называется сложение по модулю 2
#    и антиэквиваленция
#    Особенности: Истина + Истина = Ложь

# Законы алгебры логики по взаимодействию с константами (x - переменная):
# 0 + x = x
# 1 + x = 1
# 0 * x = 0
# 1 * x = x
# Простые (A = 0/1, B - переменная):
# A * A = A
# A + A = A
# A + неA = 1
# A * неA = 0
# A * (A + B) = A
# A + A * B = A
# свойства И и ИЛИ:
# (A * B) * C = A * (B * C) = A * B * C
# (A + B) + C = A + (B + C) = A + B + C
# A * B = B * A
# A + B = B + A
# A * (B + C) = A * B + A * C
# A + B * C = (A + B) * (A + C)
# Законы Де Мограна. Отрицание И и ИЛИ (ВАЖНО!)
# неА + неB = неA * неB
# неA * неB =  неA + неB
# Закон двойного отрицания - ненеA = A
# Импликация и эквиваленция
# A -> B = неA + B
# (A = B) = A * B + неA * неB

# найти есть ли числа кратные 10
# flag = False
# n = int(input('Введите количество чисел - '))
# for i in range(n):
#     x = int(input(f'Введите {i}е число - '))
#     flag = (x % 10 == 0) or flag # or flag, чтобы не потерять значения flag
#
# print(flag)

# проверить, что все числа делятся на 10
# flag = True
# n = int(input('Введите количество чисел - '))
# for i in range(n):
#     x = int(input(f'Введите {i}е число - '))
#     flag = flag and (x % 10 == 0) # and flag, чтобы не потерять значения flag
#
# print(flag)

# Вложенные и последовательные if

# Выявить число, которое делится и на 2 и на 3
# x = int(input('Введите число - '))
# через последовательные условия, некорректный вариант
# if x % 2 == 0:
#     print('Да')
# if x % 3 == 0:
#     print('Да')

# через 1 условие
# if x == 2 and x == 3:
#     print('Да')

# через вложенные
# if x % 2 == 0:
#     if x % 3 == 0:
#         print('Да')

##### Каскадные условные конструкции. Их 2
# 1я. Дано целое число, нужно напечатать букву a, b, c или d в зависимости
# от значения числа. если < 0, то a, если 0 до 5, то b
# если 5 до 10, то c, если > 10, то d
# try:
#     x = int(input('Введите число - '))
# except ValueError as e:
#     print('Нет такого числа')
#     print(e)
#     exit()
# except NameError as e:
#     print('Нет такого числа')
#     print(e)
#     exit()
#
# if x < 0:
#     print('A')
# elif x < 5: # x >=0 исходя из 1 фильтра
#     print('B')
# elif x < 10:
#     print('С')
# elif x >= 10:
#     print('D')
# else:
#     raise ValueError('Вы ввели не число')

# 2я конструкция.
# Нужно определить четверть 1, 2, 3 или 4 по осям -x:x -y:y

try:
    x = int(input('Введите число x - '))
    y = int(input('Введите число y - '))
except ValueError as e:
    print('Нет такого числа')
    print(e)
    exit()
except NameError as e:
    print('Нет такого числа')
    print(e)
    exit()

if y > 0:
    if x > 0:
        print(1)
    else:
        print(2)
else:
    if x < 0:
        print(3)
    else:
        print(4)

